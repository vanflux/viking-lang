// Generated from viking.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class vikingLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly STRING = 17;
	public static readonly ID = 18;
	public static readonly DIGITS = 19;
	public static readonly WS = 20;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "STRING", 
		"STRING_CHAR", "ID", "DIGITS", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'if'", "'else'", "'while'", "'{'", "'}'", "';'", "'('", "')'", 
		"'='", "'<'", "'>'", "'+'", "'-'", "','", "'['", "']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "STRING", "ID", "DIGITS", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(vikingLexer._LITERAL_NAMES, vikingLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return vikingLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(vikingLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "viking.g4"; }

	// @Override
	public get ruleNames(): string[] { return vikingLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return vikingLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return vikingLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return vikingLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x16\x8B\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x03\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r" +
		"\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x06\x12X\n\x12\r\x12\x0E\x12Y\x03\x12\x03\x12\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x05\x13i\n\x13\x03\x13\x05\x13l\n\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x06\x13r\n\x13\r\x13\x0E\x13s\x05\x13v\n\x13\x03\x14\x06\x14" +
		"y\n\x14\r\x14\x0E\x14z\x03\x14\x07\x14~\n\x14\f\x14\x0E\x14\x81\v\x14" +
		"\x03\x15\x06\x15\x84\n\x15\r\x15\x0E\x15\x85\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x02\x02\x02\x17\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x02\'" +
		"\x02\x14)\x02\x15+\x02\x16\x03\x02\t\x06\x02\f\f\x0F\x0F$$^^\f\x02$$)" +
		")AA^^cdhhppttvvxx\x03\x0229\x05\x022;CHch\x04\x02C\\c|\x03\x022;\x05\x02" +
		"\v\f\x0F\x0F\"\"\x02\x95\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x03-\x03\x02\x02" +
		"\x02\x050\x03\x02\x02\x02\x075\x03\x02\x02\x02\t;\x03\x02\x02\x02\v=\x03" +
		"\x02\x02\x02\r?\x03\x02\x02\x02\x0FA\x03\x02\x02\x02\x11C\x03\x02\x02" +
		"\x02\x13E\x03\x02\x02\x02\x15G\x03\x02\x02\x02\x17I\x03\x02\x02\x02\x19" +
		"K\x03\x02\x02\x02\x1BM\x03\x02\x02\x02\x1DO\x03\x02\x02\x02\x1FQ\x03\x02" +
		"\x02\x02!S\x03\x02\x02\x02#U\x03\x02\x02\x02%u\x03\x02\x02\x02\'x\x03" +
		"\x02\x02\x02)\x83\x03\x02\x02\x02+\x87\x03\x02\x02\x02-.\x07k\x02\x02" +
		"./\x07h\x02\x02/\x04\x03\x02\x02\x0201\x07g\x02\x0212\x07n\x02\x0223\x07" +
		"u\x02\x0234\x07g\x02\x024\x06\x03\x02\x02\x0256\x07y\x02\x0267\x07j\x02" +
		"\x0278\x07k\x02\x0289\x07n\x02\x029:\x07g\x02\x02:\b\x03\x02\x02\x02;" +
		"<\x07}\x02\x02<\n\x03\x02\x02\x02=>\x07\x7F\x02\x02>\f\x03\x02\x02\x02" +
		"?@\x07=\x02\x02@\x0E\x03\x02\x02\x02AB\x07*\x02\x02B\x10\x03\x02\x02\x02" +
		"CD\x07+\x02\x02D\x12\x03\x02\x02\x02EF\x07?\x02\x02F\x14\x03\x02\x02\x02" +
		"GH\x07>\x02\x02H\x16\x03\x02\x02\x02IJ\x07@\x02\x02J\x18\x03\x02\x02\x02" +
		"KL\x07-\x02\x02L\x1A\x03\x02\x02\x02MN\x07/\x02\x02N\x1C\x03\x02\x02\x02" +
		"OP\x07.\x02\x02P\x1E\x03\x02\x02\x02QR\x07]\x02\x02R \x03\x02\x02\x02" +
		"ST\x07_\x02\x02T\"\x03\x02\x02\x02UW\x07$\x02\x02VX\x05%\x13\x02WV\x03" +
		"\x02\x02\x02XY\x03\x02\x02\x02YW\x03\x02\x02\x02YZ\x03\x02\x02\x02Z[\x03" +
		"\x02\x02\x02[\\\x07$\x02\x02\\$\x03\x02\x02\x02]v\n\x02\x02\x02^_\x07" +
		"^\x02\x02_v\x07\f\x02\x02`a\x07^\x02\x02ab\x07\x0F\x02\x02bv\x07\f\x02" +
		"\x02cd\x07^\x02\x02dv\t\x03\x02\x02ef\x07^\x02\x02fh\t\x04\x02\x02gi\t" +
		"\x04\x02\x02hg\x03\x02\x02\x02hi\x03\x02\x02\x02ik\x03\x02\x02\x02jl\t" +
		"\x04\x02\x02kj\x03\x02\x02\x02kl\x03\x02\x02\x02lv\x03\x02\x02\x02mn\x07" +
		"^\x02\x02no\x07z\x02\x02oq\x03\x02\x02\x02pr\t\x05\x02\x02qp\x03\x02\x02" +
		"\x02rs\x03\x02\x02\x02sq\x03\x02\x02\x02st\x03\x02\x02\x02tv\x03\x02\x02" +
		"\x02u]\x03\x02\x02\x02u^\x03\x02\x02\x02u`\x03\x02\x02\x02uc\x03\x02\x02" +
		"\x02ue\x03\x02\x02\x02um\x03\x02\x02\x02v&\x03\x02\x02\x02wy\t\x06\x02" +
		"\x02xw\x03\x02\x02\x02yz\x03\x02\x02\x02zx\x03\x02\x02\x02z{\x03\x02\x02" +
		"\x02{\x7F\x03\x02\x02\x02|~\t\x07\x02\x02}|\x03\x02\x02\x02~\x81\x03\x02" +
		"\x02\x02\x7F}\x03\x02\x02\x02\x7F\x80\x03\x02\x02\x02\x80(\x03\x02\x02" +
		"\x02\x81\x7F\x03\x02\x02\x02\x82\x84\t\x07\x02\x02\x83\x82\x03\x02\x02" +
		"\x02\x84\x85\x03\x02\x02\x02\x85\x83\x03\x02\x02\x02\x85\x86\x03\x02\x02" +
		"\x02\x86*\x03\x02\x02\x02\x87\x88\t\b\x02\x02\x88\x89\x03\x02\x02\x02" +
		"\x89\x8A\b\x16\x02\x02\x8A,\x03\x02\x02\x02\v\x02Yhksuz\x7F\x85\x03\b" +
		"\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!vikingLexer.__ATN) {
			vikingLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(vikingLexer._serializedATN));
		}

		return vikingLexer.__ATN;
	}

}

